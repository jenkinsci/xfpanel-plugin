<!-- 
	Thanks to Mark Howard and his work on the Radiator View Plugin from which this was based.
 -->
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define"
	xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form"
	xmlns:i="jelly:fmt">

	<j:choose>
		<j:when test="${empty(items)}">
			<st:include page="noJob.jelly" />
		</j:when>
		<j:when test="${it.priorityPerJob == false}">
			<b>Priority jobs error:</b><br/>
			Configuration file is corrupted or no longer valid! <br/>
			Notice that jobs structure have changed between versions 1.2.0 and 1.2.1<br/>
			<br/>
			Fix view by generating a new config-file: current_view's_url/configure<br/>
		</j:when>
		<j:otherwise>
		
		<style>
		.btn {
  			  -webkit-border-radius: 28;
			  -moz-border-radius: 28;
			  border-radius: 28px;
			  font-family: Arial;
			  color: #ffffff;
			  font-size: 20px;
			  padding: 5px 40px;
			  text-decoration: none !important;
			  font-size:12px; 
		}

     .btn:hover {
			  background: #3cb0fd;
			  text-decoration: none;
      }
  
	  
.jobParent{
	left: 0px;
	top: 34px;
	position: absolute;
	z-index: 9999;
	width: 100%;
	text-align: center;
	overflow: auto;
}

.job{
	
}

.tagsParent{
	padding: 2px;
	text-align: left;
	background: #6CA6A6;
	margin-top: 13px;
}

.tag{
	padding: 5px;
}

.tagLabel{
	color: #000;
	font-size: 12px;
}

.tagValue{
	font-size: 14px;
	font-weight: bold;
	color: #FCF6F6;
}
</style>
<style type="text/css" href="custom-style.css"></style>
			<div class="dashboard jobParent">

				<j:invoke var="jobs" on="${from}" method="sort">
					<j:arg type="java.util.Collection" value="${items}" />
				</j:invoke>
				<j:choose>
					<j:when test="${from.numColumns == 1}">
						<j:set var="width" value="99%" />
						<j:set var="float" value="left" />
						<j:forEach var="job" items="${jobs}">

							<j:set var="dontShowJob" value="false" />
							<j:if test="${job.isBuildSuccessful() == true}" >
								<j:set var="dontShowJob" value="${it.hideSuccessfulBuilds == true}" />
							</j:if>	

							<j:if test="${ dontShowJob == false }">
								<st:include page="job.jelly" />
							</j:if>
						</j:forEach>
					</j:when>
					<j:otherwise>
						<j:set var="width" value="49%" />
						<j:forEach var="job" items="${jobs}">
							<j:set var="dontShowJob" value="false" />
							<j:if test="${job.isBuildSuccessful() == true}" >
								<j:set var="dontShowJob" value="${it.hideSuccessfulBuilds == true}" />
							</j:if>

							<j:if test="${dontShowJob == false}">
								<j:choose>
									<j:when test="${float == 'left'}">
										<j:set var="float" value="right" />
									</j:when>
									<j:otherwise>
										<j:set var="float" value="left" />
									</j:otherwise>
								</j:choose>
								<st:include page="job.jelly" />
							</j:if>
						</j:forEach>
					</j:otherwise>
				</j:choose>
			</div>
		</j:otherwise>
	</j:choose>
</j:jelly>

