	<!-- 
	Thanks to Mark Howard and his work on the Radiator View Plugin from which this was based.
 -->
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define"
	xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form"
	xmlns:i="jelly:fmt">
	
	<SCRIPT type="text/javascript" src="${rootURL}/plugin/xfpanel/sorting.js" />
	<script type="text/javascript" src="${rootURL}/plugin/xfpanel/jscolor/jscolor.js"></script>

  <f:section title="${%Job options}">

	
	<!-- Borrowed from -->
	<style type="text/css">
		/* Undo some styles from the master stylesheet */
		.checklist li { background: none; padding-left: 0; }
		
		/* CSS for checklists */
		.checklist {
			border: 1px solid #ccc;
			list-style: none;
			height: 20em;
			overflow: auto;
			width: 20em;
		}
		.checklist, .checklist li { margin: 0; padding: 0; list-style: none;}
		.checklist label { padding: 0px 0.0em 0 0; text-indent: -25px; display: inline;}
		* html .checklist label { height: 1%; }
	</style>

	<f:entry title="Jobs" field="jobSelection">
	<table>
		<tr>
			<td colspan="2">
				Available jobs
			</td>
		</tr>
		<tr>
			<td>
				<ul class="checklist" id="allJobs">
					<!-- Get a priority sorted list of jobs -->
					<j:invoke method="getPrioritySortedJobs" var="prioJobs" on="${it}">
					    <j:arg type="java.util.Collection" value="${app.items}" />
					</j:invoke>

					<j:forEach var="job" varStatus="status" items="${prioJobs}">
						<li id="${job.name}">

						<!-- Hack to fix the checkbox checked bug -->
						<j:if test="${it.contains(job)}">
							<input name="${job.name}" type="checkbox" 
								checked="true"
								 onClick="UpdateJobOptions('${job.name}');"/>
						</j:if>
						<j:if test="${!it.contains(job)}">
							<input name="${job.name}" type="checkbox" 
								onClick="UpdateJobOptions('${job.name}');"/>
						</j:if>

						<label onClick="UpdateJobOptions('${job.name}');">
							<span id="selectedJob-${job.name}">${job.name}</span>
						</label>
						<input type="hidden" id="${job.name}_priority" name="${job.name}_priority" value="${status.index}" />
						</li>
					</j:forEach>
				</ul>
			</td>
			<td>
				<button type="button" onClick="ChangePriority('up');">Up</button>
				<button type="button" onClick="ChangePriority('down');">Down</button>
			</td>
		</tr>
	</table>
	</f:entry>

	<f:optionalBlock name="useincluderegex"
		title="${%Use a regular expression instead}" checked="${it.includeRegex != null}"
		help="/help/view-config/includeregex.html">
		<f:entry title="${%Regular expression}">
			<f:textbox name="includeRegex" field="includeRegex" />
		</f:entry>
	</f:optionalBlock>

	<f:entry title="${%Show Job descriptions}" field="showDescription">
		<f:checkbox id="xfpanel.showDescription" name="showDescription" checked="${it.showDescription}" value="true"/>
	</f:entry>
	<f:entry title="${%Show test info for Jobs without tests}" field="showZeroTestCounts">
		<f:checkbox id="xfpanel.showZeroTestCounts" name="showZeroTestCounts" checked="${it.showZeroTestCounts}" value="true"/>
	</f:entry>
	<f:entry title="${%Show time from the last build}" field="showTimeStamp">
		<f:checkbox id="xfpanel.showTimeStamp" name="showTimeStamp" checked="${it.showTimeStamp}" value="true"/>
	</f:entry>
	<f:entry title="${%Show warning icon}" field="showWarningIcon">
		<f:checkbox id="xfpanel.showWarningIcon" name="showWarningIcon" checked="${it.showWarningIcon}" value="true"/>
	</f:entry>

	<j:if test="${it.hasJobFilterExtensions()}">
		<j:invokeStatic var="allJobFilters" className="hudson.views.ViewJobFilter" method="all"/>
		<f:block>
			<f:hetero-list name="jobFilters" hasHeader="true"
				descriptors="${allJobFilters}"
				items="${it.jobFilters}"
				addCaption="${%Add Job Filter}" />
		</f:block>
	</j:if>

  </f:section>

  <f:section title="${%General options}">
	<f:entry title="${%Number of columns}" field="numColumns">
		<f:textbox id="xfpanel.numColumns" name="numColumns"/>
	</f:entry>
	<f:entry title="${%Refresh time in seconds}" field="refresh">
		<f:textbox id="xfpanel.refresh" name="refresh"/>
	</f:entry>
	<f:entry title="${%Text before time of the last build}" field="lastBuildTimePreFix">
		<f:textbox id="lastBuildTimePreFix" name="lastBuildTimePreFix"/>
	</f:entry>
  </f:section>

  <f:section title="${%Sort options}">
	<f:entry title="${%Sort order}" field="sort" >
		<j:choose>
			<j:when test="${it.AutomaticSortState == true}">
				<j:set var="automatic" value="checked" />
			</j:when>
			<j:when test="${it.ManualSortState == true}">
				<j:set var="manual" value="checked" />
			</j:when>
			<j:otherwise>
				<j:set var="default" value="checked" />
			</j:otherwise>
		</j:choose>

		<input id="sort-default" type="radio" name="sort" value="sort.default" checked="${default}" />
		<label for="sort-default"> alphabetical </label> <br/>

		<input id="sort-manual" type="radio" name="sort" value="sort.manual" checked="${manual}" />
		<label for="sort-manual"> same order as in the job-selection list</label><br/>

		<input id="sort-automatic" type="radio" name="sort" value="sort.automatic" checked="${automatic}" />
		<label for="sort-automatic"> failed first, secondary order by build time stamp </label>
	</f:entry>

	<f:entry title="${%Revert order}" field="sortDescending">
		<f:checkbox id="xfpanel.sortDescending" name="sortDescending" checked="${it.sortDescending}" value="true"/>
	</f:entry>
	<f:entry title="${%Show number of failed builds since last successful build}" field="showBrokenBuildCount">
		<f:checkbox id="xfpanel.showBrokenBuildCount" name="showBrokenBuildCount" checked="${it.showBrokenBuildCount}" value="true"/>
	</f:entry>
	<f:entry title="${%Hide successful builds}" field="hideSuccessfulBuilds">
		<f:checkbox id="xfpanel.hideSuccessfulBuilds" name="hideSuccessfulBuilds" checked="${it.hideSuccessfulBuilds}" value="true"/>
	</f:entry>
  </f:section>
	
  <f:section title="${%Build responsibles}">
	<f:entry title="${%Show Responsibles}" field="responsibles">
		<j:choose>
			<j:when test="${it.BlameState==1}">
				<j:set var="onlyLastFailedBuild" value="checked" />
			</j:when>
			<j:when test="${it.BlameState==2}">
				<j:set var="onlyFirstFailedBuild" value="checked" />
			</j:when>
			<j:when test="${it.BlameState==3}">
				<j:set var="everyInvolved" value="checked" />
			</j:when>
			<j:otherwise>
				<j:set var="notAtAll" value="checked" />
			</j:otherwise>
		</j:choose>

		<input id="responsibles-notAtAll" type="radio" name="responsibles" value="blame.notAtAll" checked="${notAtAll}" /> 
		<label for="responsibles-notAtAll"> not at all </label>  <br/>

		<input id="responsibles-onlyLastFailedBuild" type="radio" name="responsibles" value="blame.onlyLastFailedBuild" checked="${onlyLastFailedBuild}"/>
		<label for="responsibles-onlyLastFailedBuild"> from the most recent failed build </label>  <br/>

		<input id="responsibles-onlyFirstFailedBuild" type="radio" name="responsibles" value="blame.onlyFirstFailedBuild" checked="${onlyFirstFailedBuild}"/>
		<label for="responsibles-onlyFirstFailedBuild"> from the first failed build </label> <br/>

		<input id="responsibles-everyInvolved" type="radio" name="responsibles" value="blame.everyInvolved" checked="${everyInvolved}"/>
		<label for="responsibles-everyInvolved"> every committer since the last successful build</label>  <br/>

		<f:entry title="${%Max nr. of responsibles to show}" field="maxAmmountOfResponsibles" >
			<f:textbox id="maxAmmountOfResponsibles" name="maxAmmountOfResponsibles" />
		</f:entry>
		<f:entry title="${%Text before responsible list}" field="responsiblesTopic" >
			<f:textbox id="responsiblesTopic" name="responsiblesTopic" />
		</f:entry>
	</f:entry>
  </f:section>

  <f:section title="${%Claim plugin support}">
		<j:choose>

			<j:when test="${it.IsClaimPluginInstalled == true}">
				<f:entry title="${%Show claimers in failed builds}" field="showClaimInfo" >
					<f:checkbox id="xfpanel.showClaimInfo" name="showClaimInfo" checked="${it.showClaimInfo}" value="true"/>
				</f:entry>	
				<f:entry title="${%Show claimers in unstable builds}" field="showClaimInfoInUnstable" >
					<f:checkbox id="xfpanel.showClaimInfoInUnstable" name="showClaimInfoInUnstable" checked="${it.showClaimInfoInUnstable}" value="true"/>
				</f:entry>	
				<f:entry title="${%Replace responsibles by claimers}" field="replaceResponsibles">
					<f:checkbox id="xfpanel.replaceResponsibles" name="replaceResponsibles" checked="${it.replaceResponsibles}" value="true"/>
				</f:entry>	
				<f:entry title="${%Replace nr. of failed test cases }" field="replaceNumberOfTestCases">
					<f:checkbox id="xfpanel.replaceNumberOfTestCases" name="replaceNumberOfTestCases" checked="${it.replaceNumberOfTestCases}" value="true"/>
					<label for="xfpanel.replaceNumberOfTestCases">  by nr. of unclaimed test cases</label> <br />
				</f:entry>	
				<f:entry title="${%Claim font size in pixels}" field="guiClaimFont">
					<f:textbox id="xfpanel.guiClaimFont" name="guiClaimFont" />
				</f:entry>
			</j:when>

			<j:otherwise>
				<a style="color:orange; font-weight:bold;">INFO: No claim plugin installed</a>
				<a style="color:gray; font-weight:normal;"> <br/><br/>
					Show claimers in failed builds<br/>
					Show claimers in unstable builds<br/>
					Replace responsibles by claimer<br/>
					Replace nr. of failed test cases by nr. of unclaimed test cases<br/>
					Claim font size in pixels<br/>
				</a>
			</j:otherwise>
		</j:choose>
  </f:section>

  <f:section title="${%Font sizes}">
	<f:entry title="${%Automatic resize entry height}" field="autoResizeEntryHeight" >
		<f:checkbox id="xfpanel.autoResizeEntryHeight" name="autoResizeEntryHeight" checked="${it.AutoResizeEntryHeight}" value="true"/>
	</f:entry>
	<f:entry title="${%Entry height in pixels}" field="guiHeight">
		<f:textbox id="xfpanel.guiHeight" name="guiHeight" />
	</f:entry>
	<f:entry title="${%Job font size in pixels}" field="guiJobFont">
		<f:textbox id="xfpanel.guiJobFont" name="guiJobFont"  />
	</f:entry>
	<f:entry title="${%Fail font size in pixels}" field="guiFailFont">
		<f:textbox id="xfpanel.guiFailFont" name="guiFailFont" />
	</f:entry>
	<f:entry title="${%Info font size in pixels}" field="guiInfoFont">
		<f:textbox id="xfpanel.guiInfoFont" name="guiInfoFont" />
	</f:entry>
	<f:entry title="${%Build font size in pixels}" field="guiBuildFont">
		<f:textbox id="xfpanel.guiBuildFont" name="guiBuildFont" />
	</f:entry>
  </f:section>


  <f:section title="${%Build colors}">
	<f:entry title="${%Successful build color}" field="successfulBuildColor" >
		<input class="color" name="successfulBuildColor" value="${it.successfulBuildColor}"/>
	</f:entry>
		<f:entry title="${%Unstable build color}" field="unstableBuildColor" >
		<input class="color" name="unstableBuildColor" value="${it.unstableBuildColor}"/>
	</f:entry>
		<f:entry title="${%Broken build color}" field="brokenBuildColor" >
		<input class="color" name="brokenBuildColor" value="${it.brokenBuildColor}"/>
	</f:entry>
	<f:entry title="${%Other builds colors}" field="otherBuildColor" >
		<input class="color" name="otherBuildColor" value="${it.otherBuildColor}"/>
	</f:entry>
	<f:entry title="${%Font color}" field="buildFontColor" >
		<input class="color" name="buildFontColor" value="${it.buildFontColor}"/>
	</f:entry>
  </f:section>

</j:jelly>
